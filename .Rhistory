theme_bw()+
theme(legend.position = "none")
p3
p3 <- ggplot(df_novar, aes(x = step, y = biomass, col = fw))+
geom_point(alpha = 0.1)+
geom_line(alpha = 0.1)+
geom_line(data = sum_novar, aes(x = step, y = meanBiomass), col = "black")+
geom_ribbon(data = sum_novar, aes(x = step, y = meanBiomass,
ymax = meanBiomass+seBiomass,
ymin = meanBiomass-seBiomass), col = "grey80", alpha = 0.5)+
# add constant (single temp) means
# need to adjust just these colours
#geom_point(data = sumRef, aes(x = 20, y = meanBiomass, col = factor(meanBiomass)), size = 5)+
geom_hline(data = sumRef, aes(yintercept = meanBiomass), linetype = 'dashed')+
geom_text(data = sumRef, aes(x = 20, y = meanBiomass,
label = as.character(temp),
col = factor(meanBiomass)))+
facet_wrap(~ tempSeq)+
theme_bw()+
theme(legend.position = "none")
p3
p3 <- ggplot(df_novar, aes(x = step, y = biomass, col = fw))+
geom_point(alpha = 0.1)+
geom_line(alpha = 0.1)+
geom_line(data = sum_novar, aes(x = step, y = meanBiomass), col = "black")+
geom_ribbon(data = sum_novar, aes(x = step, y = meanBiomass,
ymax = meanBiomass+seBiomass,
ymin = meanBiomass-seBiomass), col = "grey80", alpha = 0.5)+
# add constant (single temp) means
# need to adjust just these colours
#geom_point(data = sumRef, aes(x = 20, y = meanBiomass, col = factor(meanBiomass)), size = 5)+
geom_hline(data = sumRef, aes(yintercept = meanBiomass),
linetype = 'dashed',
col = factor(meanBiomass))+
geom_text(data = sumRef, aes(x = 20, y = meanBiomass,
label = as.character(temp),
col = factor(meanBiomass)))+
facet_wrap(~ tempSeq)+
theme_bw()+
theme(legend.position = "none")
?geom_hline
p3 <- ggplot(df_novar, aes(x = step, y = biomass, col = fw))+
geom_point(alpha = 0.1)+
geom_line(alpha = 0.1)+
geom_line(data = sum_novar, aes(x = step, y = meanBiomass), col = "black")+
geom_ribbon(data = sum_novar, aes(x = step, y = meanBiomass,
ymax = meanBiomass+seBiomass,
ymin = meanBiomass-seBiomass), col = "grey80", alpha = 0.5)+
# add constant (single temp) means
# need to adjust just these colours
#geom_point(data = sumRef, aes(x = 20, y = meanBiomass, col = factor(meanBiomass)), size = 5)+
geom_hline(data = sumRef, aes(yintercept = meanBiomass),
linetype = 'dashed')+
geom_text(data = sumRef, aes(x = 20, y = meanBiomass,
label = as.character(temp),
col = factor(meanBiomass)))+
facet_wrap(~ tempSeq)+
theme_bw()+
theme(legend.position = "none")
p3
p3 <- ggplot(df_novar, aes(x = step, y = biomass, col = fw))+
geom_point(alpha = 0.1)+
geom_line(alpha = 0.1)+
geom_line(data = sum_novar, aes(x = step, y = meanBiomass), col = "black")+
geom_ribbon(data = sum_novar, aes(x = step, y = meanBiomass,
ymax = meanBiomass+seBiomass,
ymin = meanBiomass-seBiomass), col = "grey80", alpha = 0.5)+
# add constant (single temp) means
# need to adjust just these colours
#geom_point(data = sumRef, aes(x = 20, y = meanBiomass, col = factor(meanBiomass)), size = 5)+
geom_hline(data = sumRef, aes(yintercept = meanBiomass),
linetype = 'dashed')+
geom_text(data = sumRef, aes(x = 20, y = meanBiomass,
label = as.character(temp),
col = factor(meanBiomass)), size = 10)+
facet_wrap(~ tempSeq)+
theme_bw()+
theme(legend.position = "none")
p3
p3 <- ggplot(df_novar, aes(x = step, y = biomass, col = fw))+
geom_point(alpha = 0.1)+
geom_line(alpha = 0.1)+
geom_line(data = sum_novar, aes(x = step, y = meanBiomass), col = "black")+
geom_ribbon(data = sum_novar, aes(x = step, y = meanBiomass,
ymax = meanBiomass+seBiomass,
ymin = meanBiomass-seBiomass), col = "grey80", alpha = 0.5)+
# add constant (single temp) means
# need to adjust just these colours
#geom_point(data = sumRef, aes(x = 20, y = meanBiomass, col = factor(meanBiomass)), size = 5)+
geom_hline(data = sumRef, aes(yintercept = meanBiomass),
linetype = 'dashed')+
geom_text(data = sumRef, aes(x = 20, y = meanBiomass,
label = as.character(temp),
col = factor(meanBiomass)), size = 5)+
facet_wrap(~ tempSeq)+
theme_bw()+
theme(legend.position = "none")
p3
p4 <- ggplot(df_novar, aes(x = step, y = richness, col = fw))+
geom_point(alpha = 0.1)+
geom_line(alpha = 0.1)+
# add mean + CI ribbon
geom_line(data = sum_novar, aes(x = step, y = meanRichness), col = "black")+
geom_ribbon(data = sum_novar, aes(x = step, y = meanRichness,
ymax = meanRichness+seRichness,
ymin = meanRichness-seRichness), col = "grey80", alpha = 0.5)+
# add constant (single temp) means
# need to adjust just these colours
geom_hline(data = sumRef, aes(yintercept = meanRichness),
linetype = 'dashed')+
geom_text(data = sumRef, aes(x = 20, y = meanRichness,
label = as.character(temp),
col = factor(meanRichness)), size = 5)+
# facet by sequence
facet_wrap(~ tempSeq)+
# theming
theme_bw()+
theme(legend.position = "none")
p3/p4
sumRef
p4 <- ggplot(df_novar, aes(x = step, y = richness, col = fw))+
geom_point(alpha = 0.1)+
geom_line(alpha = 0.1)+
# add mean + CI ribbon
geom_line(data = sum_novar, aes(x = step, y = meanRichness), col = "black")+
geom_ribbon(data = sum_novar, aes(x = step, y = meanRichness,
ymax = meanRichness+seRichness,
ymin = meanRichness-seRichness), col = "grey80", alpha = 0.5)+
# add constant (single temp) means
# need to adjust just these colours
geom_hline(data = sumRef, aes(yintercept = meanRich),
linetype = 'dashed')+
geom_text(data = sumRef, aes(x = 20, y = meanRich,
label = as.character(temp),
col = factor(meanRich)), size = 5)+
# facet by sequence
facet_wrap(~ tempSeq)+
# theming
theme_bw()+
theme(legend.position = "none")
p3/p4
p5 <- ggplot(sum_allLinVar, aes(x = step, y = meanBiomass, colour = factor(fw)))+
geom_point(alpha = 0.1)+
geom_line(alpha = 0.1)+
# add mean + CI ribbon
geom_line(data = hyperSum_allLinVar, aes(x = step, y = hypermeanBiomass), col = "black")+
geom_ribbon(data = hyperSum_allLinVar, aes(x = step, y = hypermeanBiomass,
ymax = hypermeanBiomass + hyperseBiomass,
ymin = hypermeanBiomass - hyperseBiomass), col = "grey80", alpha = 0.25)+
# add constant (single temp) means
# need to adjust just these colours
geom_hline(data = sumRef, aes(yintercept = meanBiomass), linetype = 'dashed')+
geom_text(data = sumRef, aes(x = 20, y = meanBiomass,
label = as.character(temp),
col = factor(meanBiomass)), size = 5)+
facet_wrap(~varType)+
theme_bw()+
theme(legend.position = "none")
p6 <- ggplot(sum_allLinVar, aes(x = step, y = meanRichness, colour = factor(fw)))+
geom_point(alpha = 0.1)+
geom_line(alpha = 0.1)+
# add mean + CI ribbon
geom_line(data = hyperSum_allLinVar, aes(x = step, y = hypermeanRichness), col = "black")+
geom_ribbon(data = hyperSum_allLinVar, aes(x = step, y = hypermeanRichness,
ymax = hypermeanRichness+hyperseRichness,
ymin = hypermeanRichness-hyperseRichness), col = "grey80", alpha = 0.25)+
# add constant (single temp) means
# need to adjust just these colours
geom_hline(data = sumRef, aes(yintercept = meanRich), linetype = 'dashed')+
geom_text(data = sumRef, aes(x = 20, y = meanRich,
label = as.character(temp),
col = factor(meanRich)), size = 5)+
facet_wrap(~varType)+
theme_bw()+
theme(legend.position = "none")
p5/p6
p7 <- ggplot(sum_allLinVarSeason, aes(x = step, y = meanBiomass, colour = factor(fw)))+
geom_point(alpha = 0.1)+
geom_line(alpha = 0.1)+
# add mean + CI ribbon
geom_line(data = hyperSum_allLinVar, aes(x = step, y = hypermeanBiomass), col = "black")+
geom_ribbon(data = hyperSum_allLinVar, aes(x = step, y = hypermeanBiomass,
ymax = hypermeanBiomass + hyperseBiomass,
ymin = hypermeanBiomass - hyperseBiomass), col = "grey80", alpha = 0.25)+
# add constant (single temp) means
# need to adjust just these colours
geom_hline(data = sumRef, aes(yintercept = meanBiomass), linetype = 'dashed')+
geom_text(data = sumRef, aes(x = 20, y = meanBiomass,
label = as.character(temp),
col = factor(meanBiomass)), size = 5)+
facet_wrap(~varType)+
theme_bw()+
theme(legend.position = "none")
p8 <- ggplot(sum_allLinVarSeason, aes(x = step, y = meanRichness, colour = factor(fw)))+
geom_point(alpha = 0.1)+
geom_line(alpha = 0.1)+
# add mean + CI ribbon
geom_line(data = hyperSum_allLinVar, aes(x = step, y = hypermeanRichness), col = "black")+
geom_ribbon(data = hyperSum_allLinVar, aes(x = step, y = hypermeanRichness,
ymax = hypermeanRichness+hyperseRichness,
ymin = hypermeanRichness-hyperseRichness), col = "grey80", alpha = 0.25)+
# add constant (single temp) means
# need to adjust just these colours
geom_hline(data = sumRef, aes(yintercept = meanRich), linetype = 'dashed')+
geom_text(data = sumRef, aes(x = 20, y = meanRich,
label = as.character(temp),
col = factor(meanRich)), size = 5)+
facet_wrap(~varType)+
theme_bw()+
theme(legend.position = "none")
p7/p8
# ALL Plots In ----
(p3|p4)/((p5|p7|p6|p8))
library(tidyverse)
library(patchwork)
df10_2K <- read_csv("Binzer_2016_z10_coarseK.csv")
col = rev(RColorBrewer::brewer.pal(9, "Greens"))
p0 <- ggplot(df10_2K, aes(x = temp, y = persistence, group = K))+
geom_point()+
geom_line()
P0
p0 <- ggplot(df10_2K, aes(x = temp, y = persistence, group = K))+
geom_point()+
geom_line()
P0
p0
p0 <- ggplot(df10_2K, aes(x = temp, y = persistence, group = eutrophication))+
geom_point()+
geom_line()
p0
basic <- df10_2K %>%
group_by(temp, eutrophication) %>%
summarise(
meanPersistence = mean(persistence),
sePersistence = sd(persistence)/sqrt(n())
)
p0 <- ggplot(basic, aes(x = temp, y = meanPersistence, group = eutrophication))+
geom_point()+
geom_line()
p0
p0 <- ggplot(basic, aes(x = temp, y = meanPersistence, group = eutrophication, col = eutrophication))+
geom_point()+
geom_line()
p0
p0 <- ggplot(basic, aes(x = temp, y = meanPersistence,
group = eutrophication, col = factor(eutrophication)))+
geom_point()+
geom_line()
p0
p0 <- ggplot(basic, aes(x = temp, y = meanPersistence,
group = eutrophication, col = factor(eutrophication)))+
geom_point()+
geom_line()+
geom_errorbar(aes(ymin = meanPersistence - sePersistence,
ymin = meanPersistence + sePersistence))
p0 <- ggplot(basic, aes(x = temp, y = meanPersistence,
group = eutrophication, col = factor(eutrophication)))+
geom_point()+
geom_line()+
geom_errorbar(aes(ymin = meanPersistence - sePersistence,
ymax = meanPersistence + sePersistence))
p0
df10_2K
p0 <- ggplot(basic, aes(x = temp+273.15, y = meanPersistence,
group = eutrophication, col = factor(eutrophication)))+
geom_point()+
geom_line()+
geom_errorbar(aes(ymin = meanPersistence - sePersistence,
ymax = meanPersistence + sePersistence))
p0
p0 <- ggplot(basic, aes(x = temp-273.15, y = meanPersistence,
group = eutrophication, col = factor(eutrophication)))+
geom_point()+
geom_line()+
geom_errorbar(aes(ymin = meanPersistence - sePersistence,
ymax = meanPersistence + sePersistence))
p0
p0 <- ggplot(basic, aes(x = temp-273.15, y = meanPersistence,
group = eutrophication, col = factor(eutrophication)))+
geom_point()+
geom_line()+
geom_errorbar(aes(ymin = meanPersistence - sePersistence,
ymax = meanPersistence + sePersistence), alpha = 0.2)
p0
p0 <- ggplot(basic, aes(x = temp-273.15, y = meanPersistence,
group = eutrophication, col = factor(eutrophication)))+
geom_point()+
geom_line()+
geom_errorbar(aes(ymin = meanPersistence - sePersistence,
ymax = meanPersistence + sePersistence), alpha = 0.5)
p0
# geom_errorbar(aes(ymin = meanPersistence - sePersistence,
#                   ymax = meanPersistence + sePersistence), alpha = 0.5)
theme_bw(base_size = 15)
p0
p0 <- ggplot(basic, aes(x = temp-273.15, y = meanPersistence,
group = eutrophication, col = factor(eutrophication)))+
geom_point()+
geom_line()+
labs(x = "Temperature (C)", y = "Mean Persistence (n = 10)")+
# geom_errorbar(aes(ymin = meanPersistence - sePersistence,
#                   ymax = meanPersistence + sePersistence), alpha = 0.5)
theme_bw(base_size = 15)
p0
p0 <- ggplot(basic, aes(x = temp-273.15, y = meanPersistence,
group = eutrophication, col = factor(eutrophication)))+
geom_point()+
geom_line()+
labs(x = "Temperature (C)", y = "Mean Persistence (n = 10)")+
# geom_errorbar(aes(ymin = meanPersistence - sePersistence,
#                   ymax = meanPersistence + sePersistence), alpha = 0.5)
theme_bw(base_size = 15)+
theme(legend.title = element_blank())
p0
TLfunc <- read_csv("TL.csv")
library(tidyverse)
TLfunc <- read_csv("TL.csv")
TLfunc
t(TLfunc)
t(TLfunc) %>% rownames_to_column()
TLfunc <- t(TLfunc) %>% tibble() %>% rownames_to_column()
TLfunc
?rownames_to_column
TLfunc <- t(TLfunc) %>% tibble() %>% rownames_to_column(var = "node")
TLfunc
TLfunc <- read_csv("TL.csv")
TLfunc <- t(TLfunc) %>% tibble() %>% rownames_to_column(var = "node")
TLfunc
TLfunc <- read_csv("TL.csv")
TLfunc
TLfunc <- t(TLfunc) %>% tibble() %>% rownames_to_column()
TLfunc
TLfunc <- t(TLfunc)
TLfunc
TLfunc <- read_csv("TL.csv")
TLfunc <- t(TLfunc)
TLfunc
rownaes(TLfunc)
rownames(TLfunc)
TLfunc <- t(TLfunc) %>% data.frame() %>% rownames_to_column()
rownames(TLfunc)
names(TLfunc) <- c("node","TL")
TLfunc <- read_csv("TL.csv")
TLfunc <- t(TLfunc) %>% data.frame() %>% rownames_to_column()
rownames(TLfunc)
TLfunc <- t(TLfunc)
TLfunc <- read_csv("TL.csv")
TLfunc <- t(TLfunc)
rownames(TLfunc)
TLfunc <- read_csv("TL.csv")
TLfunc <- t(TLfunc)
rn <- rownames(TLfunc)
TLfunc <- cbind(TLfunc, rn)
names(TLfunc) <- c("node","TL")
TLfunc
TLfunc <- read_csv("TL.csv")
colnames(TLfunc)
TLfunc <- read_csv("TL.csv")
TLfunc <- t(TLfunc)
TLfunc <- read_csv("TL.csv")
TLfunc <- read_csv("TL.csv")
TLfunc <- read_csv("TL.csv")
TLfunc
TLfunc <- t(TLfunc)
rn <- rownames(TLfunc)
TLfunc <- data.frame(TLfunc, rn)
names(TLfunc) <- c("node","TL")
TLfunc
TLfunc %>% remove_rownames()
TLfunc %>% remove_rownames()
library(tidyverse)
TLfunc <- read_csv("TL.csv")
t(TLfunc)
t(TLfunc) %>% rownames_to_column()
t(TLfunc) %>% as.data.frame() %>% rownames_to_column()
t(TLfunc) %>% as.data.frame() %>% rownames_to_column() %>% string_remove(rowname, "s")
library(stringr)
TLfunc <- read_csv("TL.csv")
t(TLfunc) %>% as.data.frame() %>% rownames_to_column() %>% string_remove(rowname, "s")
t(TLfunc) %>% as.data.frame() %>% rownames_to_column() %>% str_remove(rowname, "s")
TL_use <- t(TLfunc) %>% as.data.frame() %>% rownames_to_column()
str_remove(TL_use$rowname, "s")
as.numeric(str_remove(TL_use$rowname, "s"))
TLfunc <- read_csv("TL.csv")
TL_temp <- t(TLfunc) %>% as.data.frame() %>% rownames_to_column()
node <- as.numeric(str_remove(TL_use$rowname, "s"))
TL_use <- data.frame(TL_temp, node)
TL_use
d2pfunc <- read_csv("d2p.csv")
d2pfunc <- read_csv("d2p.csv")
dtp_temp <- t(d2pfunc) %>% as.data.frame() %>% rownames_to_column()
node <- as.numeric(str_remove(d2p_use$rowname, "s"))
TLfunc <- read_csv("TL.csv")
TL_temp <- t(TLfunc) %>% as.data.frame() %>% rownames_to_column()
node <- as.numeric(str_remove(TL_temp$rowname, "s"))
TL_use <- data.frame(TL_temp, node)
d2pfunc <- read_csv("d2p.csv")
dtp_temp <- t(d2pfunc) %>% as.data.frame() %>% rownames_to_column()
node <- as.numeric(str_remove(d2p_temp$rowname, "s"))
d2p_use <- data.frame(d2p_temp, node)
d2pfunc <- read_csv("d2p.csv")
dtp_temp <- t(d2pfunc) %>% as.data.frame() %>% rownames_to_column()
node <- as.numeric(str_remove(d2p_temp$rowname, "s"))
dtp_temp <- t(d2pfunc) %>% as.data.frame() %>% rownames_to_column()
d2p_temp <- t(d2pfunc) %>% as.data.frame() %>% rownames_to_column()
node <- as.numeric(str_remove(d2p_temp$rowname, "s"))
d2p_use <- data.frame(d2p_temp, node)
d2p_use
TLfunc <- read_csv("EvaTL.csv")
TLfunc
TLeva <- read_csv("EvaTL.csv")
TLeva_use <- data.frame(TL_temp, 1:50)
left_join(TL_use, d2p_use, by = node)
left_join(TL_use, d2p_use, by = "node")
left_join(TL_use, d2p_use, by = "node") %>%
left_join(., TLeva_use, by = "node")
TLeva_use <- data.frame(TL_temp, node = 1:50)
TLeva <- read_csv("EvaTL.csv")
TLeva_use <- data.frame(TL_temp, node = 1:50)
left_join(TL_use, d2p_use, by = "node") %>%
left_join(., TLeva_use, by = "node")
TLfunc <- read_csv("TL.csv")
TL_temp <- t(TLfunc) %>% as.data.frame() %>% rownames_to_column()
node <- as.numeric(str_remove(TL_temp$rowname, "s"))
TL_use <- data.frame(TL_temp, node) %>% select(-rowname)
TL_use
TL_use <- data.frame(TL_temp, node) %>% select(-rowname) %>% rename("TL", "V1")
TL_use <- data.frame(TL_temp, node) %>% select(-rowname) %>% rename(TL, V1)
TLfunc <- read_csv("TL.csv")
TL_temp <- t(TLfunc) %>% as.data.frame() %>% rownames_to_column()
node <- as.numeric(str_remove(TL_temp$rowname, "s"))
TL_use <- data.frame(TL_temp, node) %>% select(-rowname) %>% rename(TL, V1)
TL_use <- data.frame(TL_temp, node) %>% select(-rowname)
TL_use
TL_use %>% rename(TL, V1)
TL_use %>% rename(V1, TL)
TL_use %>% rename("V1", "TL")
TLfunc <- read_csv("TL.csv")
TL_temp <- t(TLfunc) %>% as.data.frame() %>% rownames_to_column()
node <- as.numeric(str_remove(TL_temp$rowname, "s"))
TL_use <- data.frame(TL_temp, node) %>% select(-rowname)
names(TL_use) <- c("TL","node")
TL_use
names(d2p_use) <- c("TL","node")
names(TLeva_use) <- c("TL","node")
left_join(TL_use, d2p_use, by = "node") %>%
left_join(., TLeva_use, by = "node")
TL_use
d2p_use
d2pfunc <- read_csv("d2p.csv")
d2p_temp <- t(d2pfunc) %>% as.data.frame() %>% rownames_to_column()
node <- as.numeric(str_remove(d2p_temp$rowname, "s"))
d2p_use <- data.frame(d2p_temp, node) %>% select(-rowname)
d2p_use
names(d2p_use) <- c("TL","node")
TLeva <- read_csv("EvaTL.csv")
TLeva_use <- data.frame(TL_temp, node = 1:50)
names(TLeva_use) <- c("TL","node")
left_join(TL_use, d2p_use, by = "node") %>%
left_join(., TLeva_use, by = "node")
TL_use
d2p_use
left_join(TL_use, d2p_use, by = "node")
TLeva_use
TLeva <- read_csv("EvaTL.csv")
TLeva_use <- data.frame(TL_temp, node = 1:50)
names(TLeva_use) <- c("TL","node")
TLeva_use
TLeva
TLeva_use <- data.frame(TL_temp, node = 1:50) %>%
names(TLeva_use) <- c("TL","node")
TLeva <- read_csv("EvaTL.csv")
TLeva_use <- data.frame(TL_temp, node = 1:50)
TLeva_use
TLeva <- read_csv("EvaTL.csv")
TLeva_use <- data.frame(TLeva, node = 1:50)
TLeva <- read_csv("EvaTL.csv")
TLeva_use <- data.frame(TLeva, node = 1:50)
names(TLeva_use) <- c("TL","node")
left_join(TL_use, d2p_use, by = "node") %>%
left_join(., TLeva_use, by = "node")
left_join(TL_use, d2p_use, by = "node") %>%
left_join(., TLeva_use, by = "node") %>%
select(node, TL_base = TL.x, TL_d2p = TL.y, TL_eva = TL)
compareTL <- left_join(TL_use, d2p_use, by = "node") %>%
left_join(., TLeva_use, by = "node") %>%
select(node, TL_base = TL.x, TL_d2p = TL.y, TL_eva = TL)
compareTL <- left_join(TL_use, d2p_use, by = "node") %>%
left_join(., TLeva_use, by = "node") %>%
select(node, TL_base = TL.x, TL_d2p = TL.y, TL_eva = TL) %>%
pivot_longer(names_to = "TLMethod", values_to = "TL")
left_join(TL_use, d2p_use, by = "node") %>%
left_join(., TLeva_use, by = "node") %>%
select(node, TL_base = TL.x, TL_d2p = TL.y, TL_eva = TL)
compareTL <- left_join(TL_use, d2p_use, by = "node") %>%
left_join(., TLeva_use, by = "node") %>%
select(node, TL_base = TL.x, TL_d2p = TL.y, TL_eva = TL) %>%
pivot_longer(-node, names_to = "TLMethod", values_to = "TL")
ggplot(compareTL, aes(x = node, y = TL, fill = TLMethod))+
geom_col()
ggplot(compareTL, aes(x = node, y = TL, fill = TLMethod))+
geom_col(position = dodge())
geom_col(position = dodge
ggplot(compareTL, aes(x = node, y = TL, fill = TLMethod))+
ggplot(compareTL, aes(x = node, y = TL, fill = TLMethod))+
geom_col(position = dodge)
ggplot(compareTL, aes(x = node, y = TL, fill = TLMethod))+
geom_col(position = "dodge")
ggplot(compareTL, aes(x = node, y = TL, fill = TLMethod))+
geom_col(position = "dodge")+
theme_bw()+
coord_flip()
